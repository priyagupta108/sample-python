# # name: Test pip Version Specifiers

# # on:
# #   workflow_dispatch:
# #   push:
   
# # jobs:
# #   test-pip-versions:
# #     runs-on: ubuntu-latest

   
# #     steps:
# #       - name: Checkout repository

# #         uses: actions/checkout@v4

# #       - name: Set up Python ${{ matrix.python-version }}
# #         uses: actions/setup-python@v5
# #         with:
# #           python-version: 3.12

# #       - name: Test pip version specifiers
# #         shell: bash
# #         run: |
# #           set -e

# #           echo "Testing pip==23.2.1"
# #           pip install --upgrade "pip==23.2.1"
# #           pip --version

# #           echo "Testing pip!=23.1.0"
# #           pip install --upgrade "pip!=23.1.0"
# #           pip --version

# #           echo "Testing pip>23.0.0"
# #           pip install --upgrade "pip>23.0.0"
# #           pip --version

# #           echo "Testing pip<24.0.0"
# #           pip install --upgrade "pip<24.0.0"
# #           pip --version
          
# #           echo "Testing pip>=23.0.0"
# #           pip install --upgrade "pip>=23.0.0"
# #           pip --version

# #           echo "Testing pip<=23.3.1"
# #           pip install --upgrade "pip<=23.3.1"
# #           pip --version

# #           echo "Testing pip~=23.2"
# #           pip install --upgrade "pip~=23.2"
# #           pip --version
          
# #           # echo "Testing pip===23.2.1+build"
# #           # pip install --upgrade "pip===23.2.1+build"
# #           # pip --version
          
# #           echo "Testing pip>=23.0.0,<24.0.0"
# #           pip install --upgrade "pip>=23.0.0,<24.0.0"
# #           pip --version
          
# #           echo "Testing pip>=23.0.0,!=23.1.0"
# #           pip install --upgrade "pip>=23.0.0,!=23.1.0"
# #           pip --version


# name: Test

# on: [push, pull_request]

# jobs:
#   # test:
#   #   runs-on: ${{ matrix.os }}
#   #   strategy:
#   #     fail-fast: false
#   #     matrix:
#   #       os: [windows-latest, ubuntu-latest, macos-latest, macos-13, ubuntu-24.04-arm, windows-11-arm]
#   #       python-version: ['3.13.1', '3.12']
#   #   steps:
#   #     - name: Checkout repository
#   #       uses: actions/checkout@v4
        
#   #     - name: Set up Python
#   #       uses: priyagupta108/setup-python@test-pip-version
#   #       with:
#   #         python-version: ${{ matrix.python-version }}
#   #         pip-version: 24.1b2
#   #         update-environment: false

#   #     - name: Verify pip version
#   #       run: pip --version

#   test-v5:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [windows-latest, windows-11-arm]
#         python-version: ['3.14.0-beta.1', '3.13']
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python-version }}
#           freethreaded: true
#           architecture: 'x86-freethreaded'
#           # update-environment: false

#       - name: Verify pip version
#         run: pip --version

#       - name: Install dependencies
#         run: pip install -r requirements.txt

name: Test

on:
  workflow_dispatch:
  push:
   
jobs:
  test:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Print macOS and Architecture Info
        run: |
          echo "Runner Architecture: $(uname -m)"
          echo "CPU Info: $(sysctl -n machdep.cpu.brand_string 2>/dev/null || echo 'Not available on Apple Silicon (arm64)')"
          echo "macOS Version:"
          sw_vers
      - name: Check if Rosetta is installed
        run: |
          if pkgutil --pkg-info com.apple.pkg.RosettaUpdateAuto >/dev/null 2>&1; then
            echo "Rosetta is installed"
            pkgutil --pkg-info com.apple.pkg.RosettaUpdateAuto
          else
            echo "Rosetta is NOT installed"
          fi
      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'arm64'
      - name: Check Python version
        run: python3 --version  
